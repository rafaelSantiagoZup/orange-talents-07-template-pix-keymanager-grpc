plugins {
    id("org.jetbrains.kotlin.jvm") version "1.5.21"
    id("org.jetbrains.kotlin.kapt") version "1.5.21"
    id("com.github.johnrengelman.shadow") version "7.0.0"
    id("io.micronaut.application") version "2.0.4"
    id("org.jetbrains.kotlin.plugin.allopen") version "1.5.21"
    id("com.google.protobuf") version "0.8.15"
    id("org.jetbrains.kotlin.plugin.jpa") version "1.5.21"
}

version = "0.1"
group = "com.edu.zup"

repositories {
    mavenCentral()
}

micronaut {
    runtime "netty"
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.edu.zup.*")
    }
}

dependencies {
        annotationProcessor("io.micronaut.data:micronaut-data-processor")
        implementation("io.micronaut:micronaut-runtime")
        implementation("io.micronaut.configuration:micronaut-jdbc-hikari:2.2.6")
        implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
        implementation("io.micronaut.grpc:micronaut-grpc-client-runtime")
        implementation("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
        implementation("io.micronaut.kotlin:micronaut-kotlin-runtime")
        implementation("io.micronaut.grpc:micronaut-grpc-runtime")
        implementation("javax.annotation:javax.annotation-api")
        implementation("io.micronaut.beanvalidation:micronaut-hibernate-validator")
        implementation("io.micronaut:micronaut-inject-java:3.0.1")
        runtimeOnly("ch.qos.logback:logback-classic")
        runtimeOnly("org.postgresql:postgresql")
        runtimeOnly("com.fasterxml.jackson.module:jackson-module-kotlin")
        testImplementation("com.h2database:h2")
        implementation("io.micronaut:micronaut-http-client")
        implementation("io.micronaut.xml:micronaut-jackson-xml:2.0.0")
        implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.13.0-rc2")
        testImplementation("org.testcontainers:junit-jupiter")
        testImplementation("org.testcontainers:postgresql")
        testImplementation("org.testcontainers:testcontainers")
        testImplementation("org.mockito:mockito-junit-jupiter:3.12.4")
        testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
}


application {
    mainClass.set("com.edu.zup.ApplicationKt")
}
java {
    sourceCompatibility = JavaVersion.toVersion("11")
    targetCompatibility = JavaVersion.toVersion("11")
}

tasks {
    compileKotlin {
        kotlinOptions {
            jvmTarget = "11"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            jvmTarget = "11"
        }
    }


}
sourceSets {
    main {
        java {
            srcDirs("build/generated/source/proto/main/grpc")
            srcDirs("build/generated/source/proto/main/java")
        }
    }
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:3.17.2" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:1.38.0" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}
